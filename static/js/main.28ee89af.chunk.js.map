{"version":3,"sources":["typings/index.ts","utils/i18n.ts","utils/index.ts","components/Countdown/Countdown.i18n/ru.ts","common/common.i18n/ru.ts","store/ColorStore/typings/index.ts","context/LanguageContext.ts","components/Counter/Counter.tsx","components/Divider/Divider.tsx","components/Countdown/Countdown.tsx","store/ColorStore/ColorStore.ts","store/SettingsStore/typings/index.ts","store/SettingsStore/SettingsStore.ts","store/CounterStore/CounterStore.typings/index.ts","store/CounterStore/CounterStore.tsx","store/index.ts","store/utils/index.ts","storage/index.ts","context/StoreContext.ts","components/Theme/Theme.tsx","components/Icon/Icon.tsx","components/DateInput/DateInput.tsx","components/TextInput/TextInput.tsx","components/Button/index.tsx","components/Checkbox/Checkbox.tsx","components/DateForm/DateForm.tsx","components/CounterList/Counter/CounterList-Counter.tsx","components/CounterList/CounterList.tsx","components/TabPanel/TabPanel.tsx","components/Sidebar/Sidebar.tsx","components/App/App.tsx","index.tsx"],"names":["Days","Locales","getCurrentDay","DateTime","local","getDifference","targetDate","currentDate","diff","createDate","date","fromSQL","setStartOfDay","startOf","noop","ru","finally","in","days","hours","minutes","seconds","ColorStoreActions","LanguageContext","React","createContext","locale","setLocale","cnCounter","cn","Counter","memo","props","react_default","a","createElement","className","unit","value","cnDivider","Divider","cnCountdown","Countdown","useContext","currentCounter","counter","useMemo","weekday","arguments","length","undefined","friday","set","getWeekday","targetNextDate","nextDay","plus","getNextWeekday","isFinished","hasSame","_useState","useState","_useState2","Object","slicedToArray","time","setTime","_useState3","_useState4","finished","setFinished","lang","langset","commonLang","commonLangset","useEffect","computeTime","intervalTimerId","window","setInterval","clearInterval","template","remainingTime","toFormat","split","eventName","text","concat","Divider_Divider","Counter_Counter","Number","SettingsStoreActionTypes","CounterStoreActionTypes","initialState","colorStore","primary","settingsStore","withMonths","withYears","counterStore","counters","currentCounterId","rootReducer","_len","reducers","Array","_key","state","action","store","result","_arr","_i","reducer","localStorage","setItem","JSON","stringify","createReducer","produce","draft","type","change","payload","toggleMonths","toggleYears","add","push","id","Math","random","remove","filter","changeRepeat","find","repeatable","chooseCounter","StoreContext","dispatch","Theme","cssVars","cnIcon","Icon","onIconClick","style","_props$iconStyle","iconStyle","name","title","onClick","cnDateInput","DateInput","forwardRef","caption","_props$onChange","onChange","ref","defaultValue","toSQLDate","cnTextInput","TextInput","placeholder","cnButton","Button","onButtonClick","icon","disabled","Icon_Icon","assign","cnCheckbox","cnDateForm","label","DateForm","buttonDisabled","setButtonDisabled","titleRef","createRef","dateRef","onInputChange","current","isValid","TextInput_TextInput","DateInput_DateInput","Button_Button","CounterListCounter","cnCounterList","active","e","stopPropagation","CounterList","_useContext","toConsumableArray","sort","b","map","key","cnTabPanel","TabPanel","tabs","tab","index","Boolean","content","cnSidebar","Sidebar","tabIndex","activeTab","setActiveTab","sidebarOpened","setSidebarOpened","timerPage","Fragment","CounterList_CounterList","DateForm_DateForm","opened","TabPanel_TabPanel","cnApp","ReactDOM","render","_useReducer","useReducer","storeData","getItem","parse","err","loadFromStorage","_useReducer2","c","Provider","Countdown_Countdown","Sidebar_Sidebar","document","getElementById"],"mappings":"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","file":"static/js/main.28ee89af.chunk.js","sourcesContent":["export enum Days {\n  monday = 1,\n  tuesday = 2,\n  wednesday = 3,\n  thursday = 4,\n  friday = 5,\n  saturday = 6,\n  sunday = 0\n};\n\nexport interface IClassNameProps {\n  className?: string;\n};","export enum Locales {\n    ru = 'ru'\n};\n\nexport const useLang = (langset: Record<string, object>, locale = Locales.ru) => {\n    return langset[locale];\n};\n\n","import { Days } from '../typings';\nimport { DateTime, Duration } from 'luxon';\n\nexport const getCurrentDay = () => DateTime.local();\n/**\n * Returns the difference between two dates\n */\nexport const getDifference = (targetDate: DateTime, currentDate: DateTime) => {\n  return targetDate.diff(currentDate);\n}\n\nexport const createDate = (date: string) => DateTime.fromSQL(date);\n\n/**\n * Returns the beginning of the day\n */\nexport const setStartOfDay = (date: DateTime) => date.startOf('day');\n\n\nexport const getWeekday = (currentDate: DateTime, weekday: Days = Days.friday) => (\n  setStartOfDay(currentDate.set({ weekday }))\n);\n\n/**\n * Returns the next day [e.g. next friday, next tueday] of a week \n */\nexport const getNextWeekday = (currentDate: DateTime, weekday: Days = Days.friday) => {\n  let nextDay = setStartOfDay(currentDate.set({ weekday }));\n  if (nextDay < currentDate) {\n    nextDay = setStartOfDay(currentDate.plus({ days: 7 }).set({ weekday }));\n  }\n\n  return nextDay;\n}\n\nexport const noop = () => { };\nexport const format = (date: DateTime | Duration, template: string) => date.toFormat(template);\n","export const ru = {\n    finally: 'наконец-то',\n    in: 'через',\n};","export const ru = {\n    days: 'дни',\n    hours: 'часы',\n    minutes: 'минуты',\n    seconds: 'секунды'\n};","export interface IColorStore {\n    primary: number;\n}\n\nexport enum ColorStoreActions {\n    change = 'color:change'\n}","import React from 'react';\nimport { noop } from '../utils';\nimport { Locales } from '../utils/i18n';\n\ninterface ILanguageContext {\n    locale: Locales;\n    setLocale(locale: Locales): void;\n}\n\nexport const LanguageContext = React.createContext<ILanguageContext>({ locale: Locales.ru, setLocale: noop });","import React from 'react';\n\nimport './Counter.scss';\nimport { cn } from 'recn';\n\nconst cnCounter = cn('Counter');\n\ninterface ICounterProps {\n    value: string | number;\n    unit: string;\n}\n\nexport const Counter: React.FC<ICounterProps> = React.memo(props => (\n    <div className={cnCounter()}>\n        <div className={cnCounter('Unit')}>{props.unit}</div>\n        <div className={cnCounter('Value')}>{props.value}</div>\n    </div>\n));","import React from 'react';\nimport { cn } from 'recn';\n\nimport './Divider.scss';\nimport { IClassNameProps } from '../../typings';\n\nconst cnDivider = cn('Divider');\n\nexport const Divider: React.FC<IClassNameProps> = React.memo((props) => (\n    <div className={cnDivider(null, [props.className])} />\n));","import React, { useState, useEffect, useContext, useMemo } from 'react';\nimport { cn } from 'recn';\nimport { getDifference, getCurrentDay, getNextWeekday, format, getWeekday, createDate } from '../../utils';\nimport * as langset from './Countdown.i18n';\nimport * as commonLangset from '../../common/common.i18n';\nimport { ICounter } from '../../store/CounterStore/CounterStore.typings';\n\nimport { LanguageContext } from '../../context/LanguageContext';\n\nimport './Countdown.scss';\nimport { Counter } from '../Counter/Counter';\nimport { IClassNameProps } from '../../typings';\nimport { Divider } from '../Divider/Divider';\n\nexport const cnCountdown = cn('Countdown');\n\ninterface ICountdownProps extends IClassNameProps {\n  counter?: ICounter;\n}\n\nexport const Countdown: React.FC<ICountdownProps> = React.memo((props) => {\n  const { locale } = useContext(LanguageContext);\n  const currentCounter = props.counter;\n\n  let currentDate = useMemo(() => getCurrentDay(), []);\n  const targetDate = useMemo(() => currentCounter ? createDate(currentCounter.date) : getWeekday(currentDate), [currentCounter]);\n  const targetNextDate = useMemo(() => currentCounter ? createDate(currentCounter.date) : getNextWeekday(currentDate), [currentCounter]);\n  let isFinished = targetDate.hasSame(currentDate, 'day');\n\n  const [time, setTime] = useState(() => getDifference(targetNextDate, currentDate));\n  const [finished, setFinished] = useState(() => isFinished);\n\n  const lang = langset[locale];\n  const commonLang = useMemo(() => commonLangset[locale], [locale]);\n\n  useEffect(() => {\n    const computeTime = () => {\n      currentDate = getCurrentDay();\n      isFinished = targetDate.hasSame(currentDate, 'day');\n      setTime(getDifference(targetNextDate, currentDate));\n      if (isFinished !== finished) {\n        setFinished(isFinished);\n      }\n    }\n\n    computeTime();\n    const intervalTimerId = window.setInterval(computeTime, 1000);\n\n    return () => clearInterval(intervalTimerId);\n  }, [props.counter]);\n\n  const remainingTime = format(time, 'dd,hh,mm,ss').split(',');\n  const eventName = useMemo(() => currentCounter ? currentCounter.text : 'пятница', [props.counter]);\n\n  return (\n    <div className={cnCountdown()}>\n      {finished && <div className={cnCountdown('FinalTitle')}>{`${lang.finally} ${eventName}!`}</div>}\n      <div className={cnCountdown('Title')}>{`${eventName} ${lang.in}:`}</div>\n      <Divider />\n      <div className={cnCountdown('RemainingTime')}>\n        <Counter unit={commonLang.days} value={Number(remainingTime[0]) > 999 ? '∞' : remainingTime[0]} />\n        <Counter unit={commonLang.hours} value={remainingTime[1]} />\n        <Counter unit={commonLang.minutes} value={remainingTime[2]} />\n        <Counter unit={commonLang.seconds} value={remainingTime[3]} />\n      </div>\n    </div>\n  );\n});","import { IState } from \"../typings\";\nimport produce from 'immer';\n\nimport { IColorStore, ColorStoreActions } from './typings';\nimport { ColorActions } from \"./actions\";\n\nexport const ColorStore: IColorStore = {\n  primary: 250\n}\n\nexport const colorReducer = (state: IState, action: ColorActions) => produce(state, draft => {\n  switch (action.type) {\n    case ColorStoreActions.change:\n      draft.colorStore.primary = action.payload;\n      return draft;\n    default:\n      return draft;\n  }\n});","export interface ISettingsStore {\n    /** Display months */\n    withMonths: boolean;\n    /** Display years */\n    withYears: boolean;\n}\n\nexport enum SettingsStoreActionTypes {\n    toggleMonths = 'settings:toggleMonths',\n    toggleYears = 'settings: toggleYears'\n}","import { ISettingsStore, SettingsStoreActionTypes } from \"./typings\";\nimport { IState, Action } from \"../typings\";\nimport produce from \"immer\";\n\nexport const SettingsStore: ISettingsStore = {\n    withMonths: false,\n    withYears: false,\n}\n\nexport const settingsReducer = (state: IState, action: Action) => produce(state, draft => {\n    switch (action.type) {\n        case SettingsStoreActionTypes.toggleMonths:\n            draft.settingsStore.withMonths = !draft.settingsStore.withMonths\n            return draft;\n        case SettingsStoreActionTypes.toggleYears:\n            draft.settingsStore.withMonths = !draft.settingsStore.withYears || draft.settingsStore.withMonths;\n            draft.settingsStore.withYears = !draft.settingsStore.withYears;\n            return draft;\n        default:\n            return draft;\n    }\n});","import { Action } from \"../../typings\";\n\nexport enum CounterStoreActionTypes {\n    add = 'counters:add',\n    remove = 'counters:remove',\n    changeRepeat = 'counters:changeRepeat',\n    chooseCounter = 'counters:chooseCounter',\n}\n\nexport interface ICounter {\n    date: string;\n    text: string;\n    id: number;\n    repeatable?: boolean;\n}\n\nexport interface CounterAddAction extends Action {\n    payload: {\n        text: string;\n        date: string;\n    }\n};\n\nexport interface CounterRemoveAction extends Action {\n    payload: number;\n}","import { IState, Action } from \"../typings\";\nimport produce from \"immer\";\nimport { CounterStoreActionTypes, CounterAddAction, CounterRemoveAction, ICounter } from \"./CounterStore.typings\";\nexport interface ICounterStore {\n    counters: ICounter[];\n    currentCounterId?: number;\n}\n\nexport const CounterStore: ICounterStore = {\n    counters: [],\n    currentCounterId: 0,\n}\n\nexport const counterReducer = (state: IState, action: Action) => produce(state, draft => {\n    switch (action.type) {\n        case CounterStoreActionTypes.add:\n            draft.counterStore.counters.push({\n                id: Math.random(),\n                text: (action as CounterAddAction).payload.text,\n                date: (action as CounterAddAction).payload.date,\n            });\n            return draft;\n        case CounterStoreActionTypes.remove:\n            draft.counterStore.counters = draft.counterStore.counters\n                .filter(counter => counter.id !== (action as CounterRemoveAction).payload);\n            return draft;\n        case CounterStoreActionTypes.changeRepeat:\n            const counter = draft.counterStore.counters.find(counter => counter.id === action.payload.id);\n            if (counter) {\n                counter.repeatable = !counter.repeatable\n            }\n\n            return draft;\n        case CounterStoreActionTypes.chooseCounter:\n            draft.counterStore.currentCounterId = Number(action.payload.id);\n            return draft;\n        default:\n            return state;\n    }\n});","import { IState } from './typings';\nimport { createReducer } from \"./utils\";\nimport { ColorStore, colorReducer } from \"./ColorStore/ColorStore\";\nimport { settingsReducer, SettingsStore } from \"./SettingsStore/SettingsStore\";\nimport { CounterStore, counterReducer } from \"./CounterStore/CounterStore\";\n\nexport const initialState: IState = {\n  colorStore: ColorStore,\n  settingsStore: SettingsStore,\n  counterStore: CounterStore,\n}\n\nexport const rootReducer = createReducer(\n  colorReducer,\n  settingsReducer,\n  counterReducer,\n);","import { Action, IState } from \"../typings\";\nimport { saveToStorage } from \"../../storage\";\n\n\nexport const createReducer = (...reducers: ((state: IState, action: Action) => IState)[]) => {\n    return (state: IState, action: Action) => {\n        let result = state;\n\n        for (let reducer of reducers) {\n            result = reducer(result, action);\n        }\n\n        saveToStorage(result);\n\n        return result;\n    }\n};","import { IState } from \"../store/typings\";\nimport { initialState } from \"../store\";\n\nconst storeKey = 'ffStore$';\n\nexport const saveToStorage = (store: IState) => {\n    window.localStorage.setItem(storeKey, JSON.stringify(store));\n}\n\nexport const loadFromStorage = (): IState => {\n    const storeData = window.localStorage.getItem(storeKey);\n    if (!storeData) {\n        return initialState;\n    }\n\n    let store: Partial<IState>;\n    try {\n        store = JSON.parse(storeData);\n    } catch (err) {\n        return initialState;\n    }\n\n    return {\n        colorStore: store.colorStore ? store.colorStore : initialState.colorStore,\n        counterStore: store.counterStore ? store.counterStore : initialState.counterStore,\n        settingsStore: store.settingsStore ? store.settingsStore : initialState.settingsStore\n    }\n}","import React from 'react';\nimport { IState } from '../store/typings';\nimport { initialState } from '../store';\nimport { noop } from '../utils';\n\ninterface IStoreContext {\n    store: IState;\n    dispatch: (args: any) => void;\n}\n\nexport const StoreContext = React.createContext<IStoreContext>({ store: initialState, dispatch: noop });","import React, { useContext } from 'react';\nimport { StoreContext } from '../../context/StoreContext';\n\nexport const Theme = React.memo(() => {\n    const { store } = useContext(StoreContext);\n    const cssVars = `\n        .App{\n            --primaryHue: ${store.colorStore.primary}\n        }`;\n\n    return (\n        <style>\n            {cssVars}\n        </style>\n    );\n});","import React from 'react';\nimport { cn } from 'recn';\n\nimport { IClassNameProps } from '../../typings';\n\nimport './Icon.scss';\n\nexport interface IIconProps extends IClassNameProps {\n    name: string;\n    iconStyle?: 'ios' | 'md';\n    onIconClick?: (e: React.MouseEvent) => void;\n    style?: React.CSSProperties;\n}\n\nconst cnIcon = cn('Icon');\n\nexport const Icon: React.FC<IIconProps> = React.memo(props => {\n    const { onIconClick, style, iconStyle = 'md', name, className } = props;\n\n    return (\n        <i\n            title=\"Когда пятница?\"\n            onClick={onIconClick}\n            style={style}\n            className={cnIcon(null, [`ion-${iconStyle}-${name}`, className])} />\n    );\n});","import React, { useState, useReducer } from 'react';\nimport { cn } from 'recn';\nimport { getCurrentDay, noop } from '../../utils';\n\nimport './DateInput.scss';\nimport { DateTime } from 'luxon';\nimport { IClassNameProps } from '../../typings';\n\nconst cnDateInput = cn('DateInput');\n\ninterface IDateInputProps extends IClassNameProps {\n    caption: string;\n    date?: DateTime;\n    forwardRef: React.RefObject<HTMLInputElement>;\n    onChange?(): void;\n}\n\nexport const DateInput: React.FC<IDateInputProps> = React.memo(props => {\n    const { forwardRef, caption, date, onChange = noop } = props;\n\n    return (\n        <div className={cnDateInput(null, [props.className])}>\n            <label className={cnDateInput('Label')}>{caption}</label>\n            <input type='date' ref={forwardRef} defaultValue={date && date.toSQLDate()} className={cnDateInput('Input')} onChange={onChange} />\n        </div>\n    )\n});","import React from 'react';\nimport { cn } from 'recn';\n\nimport './TextInput.scss';\nimport { IClassNameProps } from '../../typings';\n\ninterface ITextInputProps extends IClassNameProps {\n    onChange?(e?: React.ChangeEvent<HTMLInputElement>): void;\n    defaultValue?: string;\n    forwardRef: React.RefObject<HTMLInputElement>;\n    caption: string;\n    placeholder?: string;\n}\n\nconst cnTextInput = cn('TextInput');\n\nexport const TextInput: React.FC<ITextInputProps> = React.memo(props => {\n    const { defaultValue, forwardRef, caption, placeholder, onChange } = props;\n\n    return (\n        <div className={cnTextInput(null, [props.className])}>\n            <label className={cnTextInput('Label')}>{caption}</label>\n            <input onChange={onChange} className={cnTextInput('Input')} defaultValue={defaultValue} ref={forwardRef} placeholder={placeholder} />\n        </div>\n    );\n});","import React from 'react';\nimport { cn } from 'recn';\n\nimport { IIconProps, Icon } from '../Icon/Icon';\nimport { IClassNameProps } from '../../typings';\n\nimport './Button.scss';\n\nexport interface IButtonProps extends IClassNameProps {\n  onButtonClick?: (e: React.MouseEvent) => void;\n  hint?: string;\n  text?: string;\n  icon?: IIconProps;\n  disabled?: boolean;\n}\n\nexport const cnButton = cn('Button');\n\nexport const Button: React.FC<IButtonProps> = React.memo(props => {\n  const { className, onButtonClick, text, icon, disabled } = props;\n  return (\n    <button\n      disabled={disabled}\n      className={cnButton({ disabled }, [className])}\n      onClick={onButtonClick}>\n      {text}\n      {icon && <Icon {...icon} className={cnButton('Icon')} />}\n    </button>\n  );\n}); ","import React from 'react';\nimport { IClassNameProps } from '../../typings';\nimport { cn } from 'recn';\n\nimport './Checkbox.scss';\n\ninterface ICheckboxProps extends IClassNameProps {\n    checked?: boolean;\n    label: string;\n    forwardRef: React.Ref<HTMLInputElement>;\n    onChange?(e: React.ChangeEvent<HTMLInputElement>): void;\n}\n\nconst cnCheckbox = cn('Checkbox');\n\nexport const Checkbox: React.FC<ICheckboxProps> = React.memo(props => (\n    <div className={cnCheckbox(null, [props.className])}>\n        <label className={cnCheckbox('Label')}>{props.label}</label>\n        <input\n            className={cnCheckbox('Input')}\n            onChange={props.onChange}\n            type='checkbox'\n            ref={props.forwardRef} />\n    </div>\n\n))","import React, { useContext, useState } from 'react';\nimport { DateInput } from '../DateInput/DateInput';\nimport { TextInput } from '../TextInput/TextInput';\nimport { Button } from '../Button';\nimport { cn } from 'recn';\nimport { StoreContext } from '../../context/StoreContext';\nimport { getCurrentDay } from '../../utils';\nimport { DateTime } from 'luxon';\nimport { CounterStoreActionTypes, CounterAddAction } from '../../store/CounterStore/CounterStore.typings';\nimport './DateForm.scss';\nimport { Checkbox } from '../Checkbox/Checkbox';\nimport { IClassNameProps } from '../../typings';\n\nconst cnDateForm = cn('DateForm');\n\nexport const DateForm: React.FC<IClassNameProps> = React.memo((props) => {\n    const { dispatch } = useContext(StoreContext);\n    const [buttonDisabled, setButtonDisabled] = useState(true);\n\n    const titleRef = React.createRef<HTMLInputElement>();\n    const dateRef = React.createRef<HTMLInputElement>();\n    const repeatRef = React.createRef<HTMLInputElement>();\n\n    const reset = () => {\n        if (!dateRef.current || !titleRef.current) {\n            return;\n        }\n\n        titleRef.current.value = '';\n        dateRef.current.value = getCurrentDay().toSQLDate();\n        onInputChange();\n        //repeatRef.current.checked = false;\n    }\n\n    const onInputChange = () => {\n        if (!dateRef.current || !titleRef.current) {\n            return;\n        }\n\n        const targetDate = DateTime.fromSQL(dateRef.current.value);\n        const currentDate = getCurrentDay();\n        if (!targetDate.isValid || targetDate < currentDate || titleRef.current.value === '') {\n            if (!buttonDisabled) {\n                setButtonDisabled(true);\n                return;\n            }\n        } else {\n            if (buttonDisabled) {\n                setButtonDisabled(false);\n                return;\n            }\n        }\n    }\n\n    const onButtonClick = () => {\n        if (!dateRef.current || !titleRef.current) {\n            return;\n        }\n\n        const targetDate = DateTime.fromSQL(dateRef.current.value);\n\n        dispatch({\n            type: CounterStoreActionTypes.add,\n            payload: { text: titleRef.current.value, date: targetDate.toSQLDate() }\n        } as CounterAddAction);\n        reset();\n    }\n\n    return (\n        <div className={cnDateForm(null, [props.className])}>\n            <TextInput onChange={onInputChange} className={cnDateForm('Input')} forwardRef={titleRef} caption={'Введите название события'} placeholder='День рождения Саши' />\n            <DateInput onChange={onInputChange} className={cnDateForm('Input')} forwardRef={dateRef} caption={'Введите дату'} date={getCurrentDay()} />\n            {false && <Checkbox className={cnDateForm('Input')} forwardRef={repeatRef} label={'Повторять?'} checked={false} />}\n            <Button text=\"Добавить\" onButtonClick={onButtonClick} disabled={buttonDisabled} />\n        </div>\n    )\n})","import React from 'react';\nimport { cnCounterList } from '../CounterList';\n\nimport './CounterList-Counter.scss';\nimport { Icon } from '../../Icon/Icon';\n\ninterface ICounterListCounterProps {\n    onClick(): void;\n    remove(): void;\n    text: string;\n    date: string;\n    active?: boolean;\n}\n\nexport const CounterListCounter: React.FC<ICounterListCounterProps> = React.memo((props) => {\n    const onRemoveClick = (e: React.MouseEvent) => {\n        e.stopPropagation();\n        props.remove();\n    }\n\n    return (\n        <div onClick={props.onClick} className={cnCounterList('Counter', { active: props.active })}>\n            <div className={cnCounterList('Title')}>{props.text}</div>\n            <div className={cnCounterList('Date')}>{props.date}</div>\n            <Icon onIconClick={onRemoveClick} name='trash' className={cnCounterList('RemoveButton')} />\n        </div>\n    )\n});","import React, { useContext } from 'react';\nimport { cn } from 'recn';\nimport { StoreContext } from '../../context/StoreContext';\n\nimport './CounterList.scss';\nimport { CounterStoreActionTypes } from '../../store/CounterStore/CounterStore.typings';\nimport { CounterListCounter } from './Counter/CounterList-Counter';\n\nexport const cnCounterList = cn('CounterList');\n\nexport const CounterList = React.memo(() => {\n    const { store, dispatch } = useContext(StoreContext);\n    const counters = [...store.counterStore.counters];\n\n    return (\n        <div className={cnCounterList()}>\n            {counters.length === 0 && <div className={cnCounterList('Placeholder')}>Нет сохранённых счётчиков</div>}\n            {counters.sort((a, b) => a.date < b.date ? -1 : 0).map(counter => (\n                <CounterListCounter\n                    key={counter.id}\n                    onClick={() => dispatch({ type: CounterStoreActionTypes.chooseCounter, payload: { id: counter.id } })}\n                    remove={() => dispatch({ type: CounterStoreActionTypes.remove, payload: counter.id })}\n                    active={counter.id === store.counterStore.currentCounterId}\n                    text={counter.text}\n                    date={counter.date} />\n            ))}\n        </div>\n    );\n});","import React from 'react';\nimport { IClassNameProps } from '../../typings';\nimport { cn } from 'recn';\n\nimport './TabPanel.scss';\n\ninterface ITabProps {\n    text: string;\n    active?: boolean;\n    onClick(): void;\n    content: JSX.Element | null;\n}\n\ninterface ITabPanelProps extends IClassNameProps {\n    tabs: ITabProps[];\n}\n\nconst cnTabPanel = cn('TabPanel');\n\nexport const TabPanel: React.FC<ITabPanelProps> = React.memo(props => {\n    return (\n        <div className={cnTabPanel(null, [props.className])}>\n            <div className={cnTabPanel('Navigation')}>\n                {props.tabs.map((tab, index) => (\n                    <span\n                        key={index}\n                        className={cnTabPanel('TabText', { active: tab.active })}\n                        onClick={tab.onClick}>{tab.text}</span>\n                ))}\n            </div>\n            <div className={cnTabPanel('Content')}>\n                {props.tabs.find(tab => Boolean(tab.active))!.content}\n            </div>\n        </div>\n    )\n});","import React, { useState } from 'react';\nimport { cn } from 'recn';\n\nimport './Sidebar.scss';\nimport { Icon } from '../Icon/Icon';\nimport { DateForm } from '../DateForm/DateForm';\nimport { CounterList } from '../CounterList/CounterList';\nimport { TabPanel } from '../TabPanel/TabPanel';\nimport { Divider } from '../Divider/Divider';\n\nexport const cnSidebar = cn('Sidebar');\n\ninterface ISidebarProps {\n  opened?: boolean;\n}\n\nexport const Sidebar: React.FC<ISidebarProps> = React.memo((props) => {\n  const [activeTab, setActiveTab] = useState(0);\n  const [sidebarOpened, setSidebarOpened] = useState(false);\n\n  const onTabClick = (tabIndex: number) => () => setActiveTab(tabIndex);\n\n  const onSettingsClick = () => {\n    setSidebarOpened(!sidebarOpened);\n  }\n\n  const timerPage = <>\n    <CounterList />\n    <Divider className={cnSidebar('Item')} />\n    <DateForm className={cnSidebar('Bottom')} />\n  </>;\n\n  const settigsPage = <></>;\n\n  return (\n    <div className={cnSidebar({ opened: sidebarOpened })}>\n      <Icon name='settings' className={cnSidebar('Menu')} onIconClick={onSettingsClick} />\n      <TabPanel\n        tabs={[\n          {\n            content: timerPage,\n            text: 'Таймеры',\n            onClick: onTabClick(0),\n            active: activeTab === 0,\n          },\n        /*  {\n            content: settigsPage,\n            text: 'Настройки',\n            onClick: onTabClick(1),\n            active: activeTab === 1,\n          }*/\n        ]} />\n    </div>\n  );\n});","import React, { useReducer, useState } from 'react';\nimport { cn } from 'recn';\n\nimport { Countdown } from '../Countdown/Countdown';\nimport { rootReducer, initialState } from '../../store';\nimport { StoreContext } from '../../context/StoreContext';\n\nimport './App.scss';\nimport { Theme } from '../Theme/Theme';\nimport { Sidebar } from '../Sidebar/Sidebar';\nimport { Locales } from '../../utils/i18n';\nimport { LanguageContext } from '../../context/LanguageContext';\nimport { Icon } from '../Icon/Icon';\nimport { CounterStoreActionTypes } from '../../store/CounterStore/CounterStore.typings';\nimport { loadFromStorage } from '../../storage';\n\nconst cnApp = cn('App');\n\nexport const App = () => {\n  const [store, dispatch] = useReducer(rootReducer, loadFromStorage());\n  const [locale, setLocale] = useState(Locales.ru);\n  const currentCounter = store.counterStore.counters.find(c => c.id === store.counterStore.currentCounterId);\n\n  const onFridayIconClick = () => dispatch({ type: CounterStoreActionTypes.chooseCounter, payload: { id: undefined } });\n\n  return (\n    <LanguageContext.Provider value={{ locale, setLocale }}>\n      <StoreContext.Provider value={{ store, dispatch }}>\n        <div className={cnApp()}>\n          <Theme />\n          <Countdown counter={currentCounter} />\n          <Sidebar />\n          <Icon className={cnApp('FridayIcon')} onIconClick={onFridayIconClick} name='flame' />\n        </div>\n      </StoreContext.Provider>\n    </LanguageContext.Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App/App';\n\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}