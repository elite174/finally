{"version":3,"sources":["typings/index.ts","utils/i18n.ts","utils/index.ts","components/Countdown/Countdown.i18n/ru.ts","common/common.i18n/ru.ts","store/ColorStore/typings/index.ts","context/LanguageContext.ts","components/Counter/Counter.tsx","components/Divider/Divider.tsx","components/Countdown/Countdown.tsx","store/ColorStore/ColorStore.ts","store/SettingsStore/typings/index.ts","store/SettingsStore/SettingsStore.ts","store/CounterStore/CounterStore.typings/index.ts","store/CounterStore/CounterStore.tsx","store/index.ts","store/utils/index.ts","storage/index.ts","context/StoreContext.ts","components/Theme/Theme.tsx","components/Icon/Icon.tsx","components/DateInput/DateInput.tsx","components/TextInput/TextInput.tsx","components/Button/index.tsx","components/Checkbox/Checkbox.tsx","components/DateForm/DateForm.tsx","components/CounterList/Counter/CounterList-Counter.tsx","components/CounterList/CounterList.tsx","components/TabPanel/TabPanel.tsx","components/Sidebar/Sidebar.tsx","components/App/App.tsx","index.tsx"],"names":["Days","Locales","getCurrentDay","DateTime","local","getDifference","targetDate","currentDate","diff","createDate","date","fromSQL","setStartOfDay","startOf","noop","ru","finally","in","event","finished","days","hours","minutes","seconds","ColorStoreActions","LanguageContext","React","createContext","locale","setLocale","cnCounter","cn","Counter","memo","props","react_default","a","createElement","className","unit","value","cnDivider","Divider","cnCountdown","Countdown","useContext","currentCounter","counter","useMemo","weekday","arguments","length","undefined","friday","set","getWeekday","targetNextDate","nextDay","plus","getNextWeekday","isFinished","isToday","hasSame","_useState","useState","_useState2","Object","slicedToArray","time","setTime","_useState3","_useState4","setFinished","_useState5","_useState6","today","setToday","lang","langset","commonLang","commonLangset","useEffect","intervalTimerId","computeTime","window","setInterval","clearInterval","template","remainingTime","toFormat","split","eventName","text","concat","Fragment","Divider_Divider","Counter_Counter","Number","SettingsStoreActionTypes","CounterStoreActionTypes","initialState","colorStore","primary","settingsStore","withMonths","withYears","counterStore","counters","currentCounterId","rootReducer","_len","reducers","Array","_key","state","action","store","result","_arr","_i","reducer","localStorage","setItem","JSON","stringify","createReducer","produce","draft","type","change","payload","toggleMonths","toggleYears","add","push","id","Math","random","remove","filter","changeRepeat","find","repeatable","chooseCounter","StoreContext","dispatch","Theme","cssVars","cnIcon","Icon","onIconClick","style","_props$iconStyle","iconStyle","name","title","onClick","cnDateInput","DateInput","forwardRef","caption","_props$onChange","onChange","tabIndex","ref","defaultValue","toSQLDate","cnTextInput","TextInput","placeholder","cnButton","Button","onButtonClick","icon","disabled","Icon_Icon","assign","cnCheckbox","cnDateForm","label","DateForm","buttonDisabled","setButtonDisabled","titleRef","createRef","dateRef","onInputChange","current","isValid","TextInput_TextInput","DateInput_DateInput","Button_Button","CounterListCounter","cnCounterList","active","e","stopPropagation","CounterList","_useContext","toConsumableArray","sort","b","map","key","cnTabPanel","TabPanel","tabs","tab","index","Boolean","content","cnSidebar","Sidebar","activeTab","setActiveTab","sidebarOpened","setSidebarOpened","timerPage","CounterList_CounterList","DateForm_DateForm","opened","TabPanel_TabPanel","cnApp","ReactDOM","render","_useReducer","useReducer","_useReducer2","c","Provider","Countdown_Countdown","Sidebar_Sidebar","document","getElementById"],"mappings":"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","file":"static/js/main.12903d55.chunk.js","sourcesContent":["export enum Days {\r\n  monday = 1,\r\n  tuesday = 2,\r\n  wednesday = 3,\r\n  thursday = 4,\r\n  friday = 5,\r\n  saturday = 6,\r\n  sunday = 0\r\n};\r\n\r\nexport interface IClassNameProps {\r\n  className?: string;\r\n};","export enum Locales {\r\n    ru = 'ru'\r\n};\r\n\r\nexport const useLang = (langset: Record<string, object>, locale = Locales.ru) => {\r\n    return langset[locale];\r\n};\r\n\r\n","import { Days } from '../typings';\r\nimport { DateTime, Duration } from 'luxon';\r\n\r\nexport const getCurrentDay = () => DateTime.local();\r\n/**\r\n * Returns the difference between two dates\r\n */\r\nexport const getDifference = (targetDate: DateTime, currentDate: DateTime) => {\r\n  return targetDate.diff(currentDate);\r\n}\r\n\r\nexport const createDate = (date: string) => DateTime.fromSQL(date);\r\n\r\n/**\r\n * Returns the beginning of the day\r\n */\r\nexport const setStartOfDay = (date: DateTime) => date.startOf('day');\r\n\r\n\r\nexport const getWeekday = (currentDate: DateTime, weekday: Days = Days.friday) => (\r\n  setStartOfDay(currentDate.set({ weekday }))\r\n);\r\n\r\n/**\r\n * Returns the next day [e.g. next friday, next tueday] of a week \r\n */\r\nexport const getNextWeekday = (currentDate: DateTime, weekday: Days = Days.friday) => {\r\n  let nextDay = setStartOfDay(currentDate.set({ weekday }));\r\n  if (nextDay < currentDate) {\r\n    nextDay = setStartOfDay(currentDate.plus({ days: 7 }).set({ weekday }));\r\n  }\r\n\r\n  return nextDay;\r\n}\r\n\r\nexport const noop = () => { };\r\nexport const format = (date: DateTime | Duration, template: string) => date.toFormat(template);\r\n","export const ru = {\r\n    finally: 'наконец-то',\r\n    in: 'через',\r\n    event: 'событие',\r\n    finished: 'уже состоялось'\r\n};","export const ru = {\r\n    days: 'дни',\r\n    hours: 'часы',\r\n    minutes: 'минуты',\r\n    seconds: 'секунды'\r\n};","export interface IColorStore {\r\n    primary: number;\r\n}\r\n\r\nexport enum ColorStoreActions {\r\n    change = 'color:change'\r\n}","import React from 'react';\r\nimport { noop } from '../utils';\r\nimport { Locales } from '../utils/i18n';\r\n\r\ninterface ILanguageContext {\r\n    locale: Locales;\r\n    setLocale(locale: Locales): void;\r\n}\r\n\r\nexport const LanguageContext = React.createContext<ILanguageContext>({ locale: Locales.ru, setLocale: noop });","import React from 'react';\r\n\r\nimport './Counter.scss';\r\nimport { cn } from 'recn';\r\n\r\nconst cnCounter = cn('Counter');\r\n\r\ninterface ICounterProps {\r\n    value: string | number;\r\n    unit: string;\r\n}\r\n\r\nexport const Counter: React.FC<ICounterProps> = React.memo(props => (\r\n    <div className={cnCounter()}>\r\n        <div className={cnCounter('Unit')}>{props.unit}</div>\r\n        <div className={cnCounter('Value')}>{props.value}</div>\r\n    </div>\r\n));","import React from 'react';\r\nimport { cn } from 'recn';\r\n\r\nimport './Divider.scss';\r\nimport { IClassNameProps } from '../../typings';\r\n\r\nconst cnDivider = cn('Divider');\r\n\r\nexport const Divider: React.FC<IClassNameProps> = React.memo((props) => (\r\n    <div className={cnDivider(null, [props.className])} />\r\n));","import React, { useState, useEffect, useContext, useMemo } from 'react';\r\nimport { cn } from 'recn';\r\n\r\nimport { getDifference, getCurrentDay, getNextWeekday, format, getWeekday, createDate } from '../../utils';\r\nimport * as langset from './Countdown.i18n';\r\nimport * as commonLangset from '../../common/common.i18n';\r\nimport { ICounter } from '../../store/CounterStore/CounterStore.typings';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { Counter } from '../Counter/Counter';\r\nimport { IClassNameProps } from '../../typings';\r\nimport { Divider } from '../Divider/Divider';\r\n\r\nimport './Countdown.scss';\r\n\r\nexport const cnCountdown = cn('Countdown');\r\n\r\ninterface ICountdownProps extends IClassNameProps {\r\n  counter?: ICounter;\r\n}\r\n\r\nexport const Countdown: React.FC<ICountdownProps> = React.memo((props) => {\r\n  const { locale } = useContext(LanguageContext);\r\n  const currentCounter = props.counter;\r\n\r\n  let currentDate = useMemo(() => getCurrentDay(), []);\r\n  const targetDate = useMemo(() => currentCounter ? createDate(currentCounter.date) : getWeekday(currentDate), [currentCounter]);\r\n  const targetNextDate = useMemo(() => currentCounter ? createDate(currentCounter.date) : getNextWeekday(currentDate), [currentCounter]);\r\n  let isFinished = currentDate > targetNextDate;\r\n  let isToday = targetDate.hasSame(currentDate, 'day');\r\n\r\n  const [time, setTime] = useState(() => getDifference(targetNextDate, currentDate));\r\n  const [finished, setFinished] = useState(() => isFinished);\r\n  const [today, setToday] = useState(() => isToday);\r\n\r\n  const lang = langset[locale];\r\n  const commonLang = useMemo(() => commonLangset[locale], [locale]);\r\n\r\n  useEffect(() => {\r\n    const computeTime = () => {\r\n      currentDate = getCurrentDay();\r\n      isToday = targetDate.hasSame(currentDate, 'day');\r\n      isFinished = currentDate > targetNextDate;\r\n      setTime(getDifference(targetNextDate, currentDate));\r\n      if (isFinished !== finished) {\r\n        setFinished(isFinished);\r\n      }\r\n      if (isToday !== today) {\r\n        setToday(isToday);\r\n      }\r\n    }\r\n\r\n    computeTime();\r\n    let intervalTimerId: number;\r\n    if (!isFinished) {\r\n      intervalTimerId = window.setInterval(computeTime, 1000);\r\n    }\r\n\r\n    return () => clearInterval(intervalTimerId);\r\n  }, [props.counter]);\r\n\r\n  const remainingTime = format(time, 'dd,hh,mm,ss').split(',');\r\n  const eventName = useMemo(() => currentCounter ? currentCounter.text : 'пятница', [props.counter]);\r\n\r\n  return (\r\n    <div className={cnCountdown()}>\r\n      {today && <div className={cnCountdown('FinalTitle')}>{`${lang.finally} ${eventName}!`}</div>}\r\n      {!today && finished && <div className={cnCountdown('FinalTitle')}>{`${lang.event} ${eventName} ${lang.finished}!`}</div>}\r\n      {!today && !finished && <>\r\n        <div className={cnCountdown('Title')}>{`${eventName} ${lang.in}:`}</div>\r\n        <Divider />\r\n        <div className={cnCountdown('RemainingTime')}>\r\n          <Counter unit={commonLang.days} value={Number(remainingTime[0]) > 999 ? '∞' : remainingTime[0]} />\r\n          <Counter unit={commonLang.hours} value={remainingTime[1]} />\r\n          <Counter unit={commonLang.minutes} value={remainingTime[2]} />\r\n          <Counter unit={commonLang.seconds} value={remainingTime[3]} />\r\n        </div>\r\n      </>\r\n      }\r\n    </div>\r\n  );\r\n});","import { IState } from \"../typings\";\r\nimport produce from 'immer';\r\n\r\nimport { IColorStore, ColorStoreActions } from './typings';\r\nimport { ColorActions } from \"./actions\";\r\n\r\nexport const ColorStore: IColorStore = {\r\n  primary: 250\r\n}\r\n\r\nexport const colorReducer = (state: IState, action: ColorActions) => produce(state, draft => {\r\n  switch (action.type) {\r\n    case ColorStoreActions.change:\r\n      draft.colorStore.primary = action.payload;\r\n      return draft;\r\n    default:\r\n      return draft;\r\n  }\r\n});","export interface ISettingsStore {\r\n    /** Display months */\r\n    withMonths: boolean;\r\n    /** Display years */\r\n    withYears: boolean;\r\n}\r\n\r\nexport enum SettingsStoreActionTypes {\r\n    toggleMonths = 'settings:toggleMonths',\r\n    toggleYears = 'settings: toggleYears'\r\n}","import { ISettingsStore, SettingsStoreActionTypes } from \"./typings\";\r\nimport { IState, Action } from \"../typings\";\r\nimport produce from \"immer\";\r\n\r\nexport const SettingsStore: ISettingsStore = {\r\n    withMonths: false,\r\n    withYears: false,\r\n}\r\n\r\nexport const settingsReducer = (state: IState, action: Action) => produce(state, draft => {\r\n    switch (action.type) {\r\n        case SettingsStoreActionTypes.toggleMonths:\r\n            draft.settingsStore.withMonths = !draft.settingsStore.withMonths\r\n            return draft;\r\n        case SettingsStoreActionTypes.toggleYears:\r\n            draft.settingsStore.withMonths = !draft.settingsStore.withYears || draft.settingsStore.withMonths;\r\n            draft.settingsStore.withYears = !draft.settingsStore.withYears;\r\n            return draft;\r\n        default:\r\n            return draft;\r\n    }\r\n});","import { Action } from \"../../typings\";\r\n\r\nexport enum CounterStoreActionTypes {\r\n    add = 'counters:add',\r\n    remove = 'counters:remove',\r\n    changeRepeat = 'counters:changeRepeat',\r\n    chooseCounter = 'counters:chooseCounter',\r\n}\r\n\r\nexport interface ICounter {\r\n    date: string;\r\n    text: string;\r\n    id: number;\r\n    repeatable?: boolean;\r\n}\r\n\r\nexport interface CounterAddAction extends Action {\r\n    payload: {\r\n        text: string;\r\n        date: string;\r\n    }\r\n};\r\n\r\nexport interface CounterRemoveAction extends Action {\r\n    payload: number;\r\n}","import produce from \"immer\";\r\n\r\nimport { IState, Action } from \"../typings\";\r\nimport { CounterStoreActionTypes, CounterAddAction, CounterRemoveAction, ICounter } from \"./CounterStore.typings\";\r\n\r\nexport interface ICounterStore {\r\n    counters: ICounter[];\r\n    currentCounterId?: number;\r\n}\r\n\r\nexport const CounterStore: ICounterStore = {\r\n    counters: [],\r\n    currentCounterId: 0,\r\n}\r\n\r\nexport const counterReducer = (state: IState, action: Action) => produce(state, draft => {\r\n    switch (action.type) {\r\n        case CounterStoreActionTypes.add:\r\n            draft.counterStore.counters.push({\r\n                id: Math.random(),\r\n                text: (action as CounterAddAction).payload.text,\r\n                date: (action as CounterAddAction).payload.date,\r\n            });\r\n            return draft;\r\n        case CounterStoreActionTypes.remove:\r\n            draft.counterStore.counters = draft.counterStore.counters\r\n                .filter(counter => counter.id !== (action as CounterRemoveAction).payload);\r\n            return draft;\r\n        case CounterStoreActionTypes.changeRepeat:\r\n            const counter = draft.counterStore.counters.find(counter => counter.id === action.payload.id);\r\n            if (counter) {\r\n                counter.repeatable = !counter.repeatable\r\n            }\r\n\r\n            return draft;\r\n        case CounterStoreActionTypes.chooseCounter:\r\n            draft.counterStore.currentCounterId = Number(action.payload.id);\r\n            return draft;\r\n        default:\r\n            return state;\r\n    }\r\n});","import { IState } from './typings';\r\nimport { createReducer } from \"./utils\";\r\nimport { ColorStore, colorReducer } from \"./ColorStore/ColorStore\";\r\nimport { settingsReducer, SettingsStore } from \"./SettingsStore/SettingsStore\";\r\nimport { CounterStore, counterReducer } from \"./CounterStore/CounterStore\";\r\n\r\nexport const initialState: IState = {\r\n  colorStore: ColorStore,\r\n  settingsStore: SettingsStore,\r\n  counterStore: CounterStore,\r\n}\r\n\r\nexport const rootReducer = createReducer(\r\n  colorReducer,\r\n  settingsReducer,\r\n  counterReducer,\r\n);","import { Action, IState } from \"../typings\";\r\nimport { saveToStorage } from \"../../storage\";\r\n\r\n\r\nexport const createReducer = (...reducers: ((state: IState, action: Action) => IState)[]) => {\r\n    return (state: IState, action: Action) => {\r\n        let result = state;\r\n\r\n        for (let reducer of reducers) {\r\n            result = reducer(result, action);\r\n        }\r\n\r\n        saveToStorage(result);\r\n\r\n        return result;\r\n    }\r\n};","import { IState } from \"../store/typings\";\r\nimport { initialState } from \"../store\";\r\n\r\nconst storeKey = 'ffStore$';\r\n\r\nexport const saveToStorage = (store: IState) => {\r\n    window.localStorage.setItem(storeKey, JSON.stringify(store));\r\n}\r\n\r\nexport const loadFromStorage = (): IState => {\r\n    const storeData = window.localStorage.getItem(storeKey);\r\n    if (!storeData) {\r\n        return initialState;\r\n    }\r\n\r\n    let store: Partial<IState>;\r\n    try {\r\n        store = JSON.parse(storeData);\r\n    } catch (err) {\r\n        return initialState;\r\n    }\r\n\r\n    return {\r\n        colorStore: store.colorStore ? store.colorStore : initialState.colorStore,\r\n        counterStore: store.counterStore ? store.counterStore : initialState.counterStore,\r\n        settingsStore: store.settingsStore ? store.settingsStore : initialState.settingsStore\r\n    }\r\n}","import React from 'react';\r\nimport { IState } from '../store/typings';\r\nimport { initialState } from '../store';\r\nimport { noop } from '../utils';\r\n\r\ninterface IStoreContext {\r\n    store: IState;\r\n    dispatch: (args: any) => void;\r\n}\r\n\r\nexport const StoreContext = React.createContext<IStoreContext>({ store: initialState, dispatch: noop });","import React, { useContext } from 'react';\r\nimport { StoreContext } from '../../context/StoreContext';\r\n\r\nexport const Theme = React.memo(() => {\r\n    const { store } = useContext(StoreContext);\r\n    const cssVars = `\r\n        .App{\r\n            --primaryHue: ${store.colorStore.primary}\r\n        }`;\r\n\r\n    return (\r\n        <style>\r\n            {cssVars}\r\n        </style>\r\n    );\r\n});","import React from 'react';\r\nimport { cn } from 'recn';\r\n\r\nimport { IClassNameProps } from '../../typings';\r\n\r\nimport './Icon.scss';\r\n\r\nexport interface IIconProps extends IClassNameProps {\r\n    name: string;\r\n    iconStyle?: 'ios' | 'md';\r\n    onIconClick?: (e: React.MouseEvent) => void;\r\n    style?: React.CSSProperties;\r\n}\r\n\r\nconst cnIcon = cn('Icon');\r\n\r\nexport const Icon: React.FC<IIconProps> = React.memo(props => {\r\n    const { onIconClick, style, iconStyle = 'md', name, className } = props;\r\n\r\n    return (\r\n        <i\r\n            title=\"Когда пятница?\"\r\n            onClick={onIconClick}\r\n            style={style}\r\n            className={cnIcon(null, [`ion-${iconStyle}-${name}`, className])} />\r\n    );\r\n});","import React, { useState, useReducer } from 'react';\r\nimport { cn } from 'recn';\r\nimport { getCurrentDay, noop } from '../../utils';\r\n\r\nimport './DateInput.scss';\r\nimport { DateTime } from 'luxon';\r\nimport { IClassNameProps } from '../../typings';\r\n\r\nconst cnDateInput = cn('DateInput');\r\n\r\ninterface IDateInputProps extends IClassNameProps {\r\n    caption: string;\r\n    date?: DateTime;\r\n    forwardRef: React.RefObject<HTMLInputElement>;\r\n    onChange?(): void;\r\n}\r\n\r\nexport const DateInput: React.FC<IDateInputProps> = React.memo(props => {\r\n    const { forwardRef, caption, date, onChange = noop } = props;\r\n\r\n    return (\r\n        <div className={cnDateInput(null, [props.className])}>\r\n            <label className={cnDateInput('Label')}>{caption}</label>\r\n            <input type='date' tabIndex={-1} ref={forwardRef} defaultValue={date && date.toSQLDate()} className={cnDateInput('Input')} onChange={onChange} />\r\n        </div>\r\n    )\r\n});","import React from 'react';\r\nimport { cn } from 'recn';\r\n\r\nimport './TextInput.scss';\r\nimport { IClassNameProps } from '../../typings';\r\n\r\ninterface ITextInputProps extends IClassNameProps {\r\n    onChange?(e?: React.ChangeEvent<HTMLInputElement>): void;\r\n    defaultValue?: string;\r\n    forwardRef: React.RefObject<HTMLInputElement>;\r\n    caption: string;\r\n    placeholder?: string;\r\n}\r\n\r\nconst cnTextInput = cn('TextInput');\r\n\r\nexport const TextInput: React.FC<ITextInputProps> = React.memo(props => {\r\n    const { defaultValue, forwardRef, caption, placeholder, onChange } = props;\r\n\r\n    return (\r\n        <div className={cnTextInput(null, [props.className])}>\r\n            <label className={cnTextInput('Label')}>{caption}</label>\r\n            <input tabIndex={-1} onChange={onChange} className={cnTextInput('Input')} defaultValue={defaultValue} ref={forwardRef} placeholder={placeholder} />\r\n        </div>\r\n    );\r\n});","import React from 'react';\r\nimport { cn } from 'recn';\r\n\r\nimport { IIconProps, Icon } from '../Icon/Icon';\r\nimport { IClassNameProps } from '../../typings';\r\n\r\nimport './Button.scss';\r\n\r\nexport interface IButtonProps extends IClassNameProps {\r\n  onButtonClick?: (e: React.MouseEvent) => void;\r\n  hint?: string;\r\n  text?: string;\r\n  icon?: IIconProps;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport const cnButton = cn('Button');\r\n\r\nexport const Button: React.FC<IButtonProps> = React.memo(props => {\r\n  const { className, onButtonClick, text, icon, disabled } = props;\r\n  return (\r\n    <button\r\n      disabled={disabled}\r\n      className={cnButton({ disabled }, [className])}\r\n      onClick={onButtonClick}>\r\n      {text}\r\n      {icon && <Icon {...icon} className={cnButton('Icon')} />}\r\n    </button>\r\n  );\r\n}); ","import React from 'react';\r\nimport { IClassNameProps } from '../../typings';\r\nimport { cn } from 'recn';\r\n\r\nimport './Checkbox.scss';\r\n\r\ninterface ICheckboxProps extends IClassNameProps {\r\n    checked?: boolean;\r\n    label: string;\r\n    forwardRef: React.Ref<HTMLInputElement>;\r\n    onChange?(e: React.ChangeEvent<HTMLInputElement>): void;\r\n}\r\n\r\nconst cnCheckbox = cn('Checkbox');\r\n\r\nexport const Checkbox: React.FC<ICheckboxProps> = React.memo(props => (\r\n    <div className={cnCheckbox(null, [props.className])}>\r\n        <label className={cnCheckbox('Label')}>{props.label}</label>\r\n        <input\r\n            className={cnCheckbox('Input')}\r\n            onChange={props.onChange}\r\n            type='checkbox'\r\n            ref={props.forwardRef} />\r\n    </div>\r\n\r\n))","import React, { useContext, useState } from 'react';\r\nimport { DateInput } from '../DateInput/DateInput';\r\nimport { TextInput } from '../TextInput/TextInput';\r\nimport { Button } from '../Button';\r\nimport { cn } from 'recn';\r\nimport { StoreContext } from '../../context/StoreContext';\r\nimport { getCurrentDay } from '../../utils';\r\nimport { DateTime } from 'luxon';\r\nimport { CounterStoreActionTypes, CounterAddAction } from '../../store/CounterStore/CounterStore.typings';\r\nimport './DateForm.scss';\r\nimport { Checkbox } from '../Checkbox/Checkbox';\r\nimport { IClassNameProps } from '../../typings';\r\n\r\nconst cnDateForm = cn('DateForm');\r\n\r\nexport const DateForm: React.FC<IClassNameProps> = React.memo((props) => {\r\n    const { dispatch } = useContext(StoreContext);\r\n    const [buttonDisabled, setButtonDisabled] = useState(true);\r\n\r\n    const titleRef = React.createRef<HTMLInputElement>();\r\n    const dateRef = React.createRef<HTMLInputElement>();\r\n    const repeatRef = React.createRef<HTMLInputElement>();\r\n\r\n    const reset = () => {\r\n        if (!dateRef.current || !titleRef.current) {\r\n            return;\r\n        }\r\n\r\n        titleRef.current.value = '';\r\n        dateRef.current.value = getCurrentDay().toSQLDate();\r\n        onInputChange();\r\n        //repeatRef.current.checked = false;\r\n    }\r\n\r\n    const onInputChange = () => {\r\n        if (!dateRef.current || !titleRef.current) {\r\n            return;\r\n        }\r\n\r\n        const targetDate = DateTime.fromSQL(dateRef.current.value);\r\n        const currentDate = getCurrentDay();\r\n        if (!targetDate.isValid || targetDate < currentDate || titleRef.current.value === '') {\r\n            if (!buttonDisabled) {\r\n                setButtonDisabled(true);\r\n                return;\r\n            }\r\n        } else {\r\n            if (buttonDisabled) {\r\n                setButtonDisabled(false);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    const onButtonClick = () => {\r\n        if (!dateRef.current || !titleRef.current) {\r\n            return;\r\n        }\r\n\r\n        const targetDate = DateTime.fromSQL(dateRef.current.value);\r\n\r\n        dispatch({\r\n            type: CounterStoreActionTypes.add,\r\n            payload: { text: titleRef.current.value, date: targetDate.toSQLDate() }\r\n        } as CounterAddAction);\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <div className={cnDateForm(null, [props.className])}>\r\n            <TextInput onChange={onInputChange} className={cnDateForm('Input')} forwardRef={titleRef} caption={'Введите название события'} placeholder='День рождения Саши' />\r\n            <DateInput onChange={onInputChange} className={cnDateForm('Input')} forwardRef={dateRef} caption={'Введите дату'} date={getCurrentDay()} />\r\n            {false && <Checkbox className={cnDateForm('Input')} forwardRef={repeatRef} label={'Повторять?'} checked={false} />}\r\n            <Button text=\"Добавить\" onButtonClick={onButtonClick} disabled={buttonDisabled} />\r\n        </div>\r\n    )\r\n})","import React from 'react';\r\nimport { cnCounterList } from '../CounterList';\r\n\r\nimport './CounterList-Counter.scss';\r\nimport { Icon } from '../../Icon/Icon';\r\n\r\ninterface ICounterListCounterProps {\r\n    onClick(): void;\r\n    remove(): void;\r\n    text: string;\r\n    date: string;\r\n    active?: boolean;\r\n}\r\n\r\nexport const CounterListCounter: React.FC<ICounterListCounterProps> = React.memo((props) => {\r\n    const onRemoveClick = (e: React.MouseEvent) => {\r\n        e.stopPropagation();\r\n        props.remove();\r\n    }\r\n\r\n    return (\r\n        <div onClick={props.onClick} className={cnCounterList('Counter', { active: props.active })}>\r\n            <div className={cnCounterList('Title')}>{props.text}</div>\r\n            <div className={cnCounterList('Date')}>{props.date}</div>\r\n            <Icon onIconClick={onRemoveClick} name='trash' className={cnCounterList('RemoveButton')} />\r\n        </div>\r\n    )\r\n});","import React, { useContext } from 'react';\r\nimport { cn } from 'recn';\r\nimport { StoreContext } from '../../context/StoreContext';\r\n\r\nimport './CounterList.scss';\r\nimport { CounterStoreActionTypes } from '../../store/CounterStore/CounterStore.typings';\r\nimport { CounterListCounter } from './Counter/CounterList-Counter';\r\n\r\nexport const cnCounterList = cn('CounterList');\r\n\r\nexport const CounterList = React.memo(() => {\r\n    const { store, dispatch } = useContext(StoreContext);\r\n    const counters = [...store.counterStore.counters];\r\n\r\n    return (\r\n        <div className={cnCounterList()}>\r\n            {counters.length === 0 && <div className={cnCounterList('Placeholder')}>Нет сохранённых счётчиков</div>}\r\n            {counters.sort((a, b) => a.date < b.date ? -1 : 0).map(counter => (\r\n                <CounterListCounter\r\n                    key={counter.id}\r\n                    onClick={() => dispatch({ type: CounterStoreActionTypes.chooseCounter, payload: { id: counter.id } })}\r\n                    remove={() => dispatch({ type: CounterStoreActionTypes.remove, payload: counter.id })}\r\n                    active={counter.id === store.counterStore.currentCounterId}\r\n                    text={counter.text}\r\n                    date={counter.date} />\r\n            ))}\r\n        </div>\r\n    );\r\n});","import React from 'react';\r\nimport { IClassNameProps } from '../../typings';\r\nimport { cn } from 'recn';\r\n\r\nimport './TabPanel.scss';\r\n\r\ninterface ITabProps {\r\n    text: string;\r\n    active?: boolean;\r\n    onClick(): void;\r\n    content: JSX.Element | null;\r\n}\r\n\r\ninterface ITabPanelProps extends IClassNameProps {\r\n    tabs: ITabProps[];\r\n}\r\n\r\nconst cnTabPanel = cn('TabPanel');\r\n\r\nexport const TabPanel: React.FC<ITabPanelProps> = React.memo(props => {\r\n    return (\r\n        <div className={cnTabPanel(null, [props.className])}>\r\n            <div className={cnTabPanel('Navigation')}>\r\n                {props.tabs.map((tab, index) => (\r\n                    <span\r\n                        key={index}\r\n                        className={cnTabPanel('TabText', { active: tab.active })}\r\n                        onClick={tab.onClick}>{tab.text}</span>\r\n                ))}\r\n            </div>\r\n            <div className={cnTabPanel('Content')}>\r\n                {props.tabs.find(tab => Boolean(tab.active))!.content}\r\n            </div>\r\n        </div>\r\n    )\r\n});","import React, { useState } from 'react';\r\nimport { cn } from 'recn';\r\n\r\nimport { Icon } from '../Icon/Icon';\r\nimport { DateForm } from '../DateForm/DateForm';\r\nimport { CounterList } from '../CounterList/CounterList';\r\nimport { TabPanel } from '../TabPanel/TabPanel';\r\nimport { Divider } from '../Divider/Divider';\r\n\r\nimport './Sidebar.scss';\r\n\r\nexport const cnSidebar = cn('Sidebar');\r\n\r\ninterface ISidebarProps {\r\n  opened?: boolean;\r\n}\r\n\r\nexport const Sidebar: React.FC<ISidebarProps> = React.memo(() => {\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [sidebarOpened, setSidebarOpened] = useState(false);\r\n\r\n  const onTabClick = (tabIndex: number) => () => setActiveTab(tabIndex);\r\n\r\n  const onSettingsClick = () => {\r\n    setSidebarOpened(!sidebarOpened);\r\n  }\r\n\r\n  const timerPage = <>\r\n    <CounterList />\r\n    <Divider className={cnSidebar('Item')} />\r\n    <DateForm className={cnSidebar('Bottom')} />\r\n  </>;\r\n\r\n  return (\r\n    <div className={cnSidebar({ opened: sidebarOpened })}>\r\n      <Icon name='settings' className={cnSidebar('Menu')} onIconClick={onSettingsClick} />\r\n      <TabPanel\r\n        tabs={[\r\n          {\r\n            content: timerPage,\r\n            text: 'Таймеры',\r\n            onClick: onTabClick(0),\r\n            active: activeTab === 0,\r\n          },\r\n        ]} />\r\n    </div>\r\n  );\r\n});","import React, { useReducer, useState } from 'react';\r\nimport { cn } from 'recn';\r\n\r\nimport { Countdown } from '../Countdown/Countdown';\r\nimport { rootReducer, initialState } from '../../store';\r\nimport { StoreContext } from '../../context/StoreContext';\r\n\r\nimport './App.scss';\r\nimport { Theme } from '../Theme/Theme';\r\nimport { Sidebar } from '../Sidebar/Sidebar';\r\nimport { Locales } from '../../utils/i18n';\r\nimport { LanguageContext } from '../../context/LanguageContext';\r\nimport { Icon } from '../Icon/Icon';\r\nimport { CounterStoreActionTypes } from '../../store/CounterStore/CounterStore.typings';\r\nimport { loadFromStorage } from '../../storage';\r\n\r\nconst cnApp = cn('App');\r\n\r\nexport const App = () => {\r\n  const [store, dispatch] = useReducer(rootReducer, initialState);\r\n  const [locale, setLocale] = useState(Locales.ru);\r\n  const currentCounter = store.counterStore.counters.find(c => c.id === store.counterStore.currentCounterId);\r\n\r\n  const onFridayIconClick = () => dispatch({ type: CounterStoreActionTypes.chooseCounter, payload: { id: undefined } });\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{ locale, setLocale }}>\r\n      <StoreContext.Provider value={{ store, dispatch }}>\r\n        <div className={cnApp()}>\r\n          <Theme />\r\n          <Countdown counter={currentCounter} />\r\n          <Sidebar />\r\n          <Icon className={cnApp('FridayIcon')} onIconClick={onFridayIconClick} name='flame' />\r\n        </div>\r\n      </StoreContext.Provider>\r\n    </LanguageContext.Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './components/App/App';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}