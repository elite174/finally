{"version":3,"sources":["typings/index.ts","utils/i18n.ts","utils/index.ts","components/Countdown/Countdown.i18n/ru.ts","common/common.i18n/ru.ts","store/ColorStore/typings/index.ts","context/LanguageContext.ts","components/Counter/Counter.tsx","components/Countdown/Countdown.tsx","store/ColorStore/ColorStore.ts","store/SettingsStore/typings/index.ts","store/SettingsStore/SettingsStore.ts","store/CounterStore/CounterStore.typings/index.ts","store/CounterStore/CounterStore.tsx","store/index.ts","store/utils/index.ts","context/StoreContext.ts","components/Theme/Theme.tsx","components/Sidebar/Tab/Tab.tsx","components/Icon/Icon.tsx","components/DateInput/DateInput.tsx","components/TextInput/TextInput.tsx","components/Button/index.tsx","components/DateForm/DateForm.tsx","components/CounterList/CounterList.tsx","components/Sidebar/Sidebar.tsx","components/App/App.tsx","index.tsx"],"names":["Days","Locales","getCurrentDay","DateTime","local","getDifference","targetDate","currentDate","diff","setStartOfDay","date","startOf","noop","ru","finally","in","days","hours","minutes","seconds","ColorStoreActions","LanguageContext","React","createContext","locale","setLocale","cnCounter","cn","Counter","memo","props","react_default","a","createElement","className","unit","value","cnCountdown","Countdown","timerId","useContext","lang","langset","commonLang","commonLangset","weekday","arguments","length","undefined","friday","set","getWeekday","isFinished","hasSame","targetNextDate","nextDay","plus","getNextWeekday","_useState","useState","_useState2","Object","slicedToArray","time","setTime","_useState3","_useState4","finished","setFinished","computeTime","stopCounter","clearInterval","useEffect","window","setInterval","template","remainingTime","toFormat","split","concat","Counter_Counter","SettingsStoreActionTypes","CounterStoreActionTypes","initialState","colorStore","primary","settingsStore","withMonths","withYears","counterStore","counters","rootReducer","_len","reducers","Array","_key","state","action","result","_arr","_i","reducer","createReducer","produce","draft","type","change","payload","toggleMonths","toggleYears","add","push","id","Math","random","text","remove","filter","counter","StoreContext","store","dispatch","Theme","cssVars","Tab","cnSidebar","active","onClick","cnIcon","Icon","onIconClick","style","_props$iconStyle","iconStyle","name","cnDateInput","DateInput","forwardRef","caption","_props$onChange","onChange","ref","defaultValue","toSQLDate","cnTextInput","TextInput","placeholder","cnButton","Button","onButtonClick","icon","Icon_Icon","cnDateForm","DateForm","titleRef","createRef","dateRef","reset","current","toSQL","TextInput_TextInput","DateInput_DateInput","Button_Button","fromSQL","cnCounterList","CounterList","toConsumableArray","sort","b","toMillis","map","key","tabs","index","cnApp","activeTab","setActiveTab","sidebarOpened","setSidebarOpened","opened","DateForm_DateForm","CounterList_CounterList","tab","Tab_Tab","tabIndex","ReactDOM","render","_useReducer","useReducer","_useReducer2","Provider","Countdown_Countdown","document","getElementById"],"mappings":"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","file":"static/js/main.b5d1cafe.chunk.js","sourcesContent":["export enum Days {\n  monday = 1,\n  tuesday = 2,\n  wednesday = 3,\n  thursday = 4,\n  friday = 5,\n  saturday = 6,\n  sunday = 0\n};\n\nexport interface IClassNameProps {\n  className?: string;\n}","export enum Locales {\n    ru = 'ru'\n};\n\nexport const useLang = (langset: Record<string, object>, locale = Locales.ru) => {\n    return langset[locale];\n};\n\n","import { Days } from '../typings';\nimport { DateTime, Duration } from 'luxon';\n\nexport const getCurrentDay = () => DateTime.local();\n/**\n * Returns the difference between two dates\n */\nexport const getDifference = (targetDate: DateTime, currentDate: DateTime) => {\n  return targetDate.diff(currentDate);\n}\n\n/**\n * Returns the beginning of the day\n */\nexport const setStartOfDay = (date: DateTime) => date.startOf('day');\n\n\nexport const getWeekday = (currentDate: DateTime, weekday: Days = Days.friday) => (\n  setStartOfDay(currentDate.set({ weekday }))\n);\n\n/**\n * Returns the next day [e.g. next friday, next tueday] of a week \n */\nexport const getNextWeekday = (currentDate: DateTime, weekday: Days = Days.friday) => {\n  let nextDay = setStartOfDay(currentDate.set({ weekday }));\n  if (nextDay < currentDate) {\n    nextDay = setStartOfDay(currentDate.plus({ days: 7 }).set({ weekday }));\n  }\n\n  return nextDay;\n}\n\nexport const noop = () => { };\nexport const format = (date: DateTime | Duration, template: string) => date.toFormat(template);\n","export const ru = {\n    finally: 'наконец-то',\n    in: 'через',\n};","export const ru = {\n    days: 'дни',\n    hours: 'часы',\n    minutes: 'минуты',\n    seconds: 'секунды'\n};","export interface IColorStore {\n    primary: number;\n}\n\nexport enum ColorStoreActions {\n    change = 'color:change'\n}","import React from 'react';\nimport { noop } from '../utils';\nimport { Locales } from '../utils/i18n';\n\ninterface ILanguageContext {\n    locale: Locales;\n    setLocale(locale: Locales): void;\n}\n\nexport const LanguageContext = React.createContext<ILanguageContext>({ locale: Locales.ru, setLocale: noop });","import React from 'react';\n\nimport './Counter.scss';\nimport { cn } from 'recn';\n\nconst cnCounter = cn('Counter');\n\ninterface ICounterProps {\n    value: string | number;\n    unit: string;\n}\n\nexport const Counter: React.FC<ICounterProps> = React.memo(props => (\n    <div className={cnCounter()}>\n        <div className={cnCounter('Unit')}>{props.unit}</div>\n        <div className={cnCounter('Value')}>{props.value}</div>\n    </div>\n));","import React, { useState, useEffect, useContext } from 'react';\nimport { cn } from 'recn';\nimport { getDifference, getCurrentDay, getNextWeekday, format, getWeekday } from '../../utils';\nimport * as langset from './Countdown.i18n';\nimport * as commonLangset from '../../common/common.i18n';\n\nimport { LanguageContext } from '../../context/LanguageContext';\n\nimport './Countdown.scss';\nimport { Counter } from '../Counter/Counter';\n\nexport const cnCountdown = cn('Countdown');\n\ninterface ICountdownProps {\n  event?: string;\n}\n\nexport const Countdown: React.FC<ICountdownProps> = React.memo(props => {\n  const { locale } = useContext(LanguageContext);\n  const lang = langset[locale];\n  const commonLang = commonLangset[locale];\n\n  let timerId: number;\n  let currentDate = getCurrentDay();\n  const targetDate = getWeekday(currentDate);\n  let isFinished = targetDate.hasSame(currentDate, 'day');\n  const targetNextDate = getNextWeekday(currentDate);\n\n  const [time, setTime] = useState(getDifference(targetNextDate, currentDate));\n  const [finished, setFinished] = useState(isFinished);\n\n  const computeTime = () => {\n    currentDate = getCurrentDay();\n    isFinished = targetDate.hasSame(currentDate, 'day');\n    setTime(getDifference(targetNextDate, currentDate));\n    if (isFinished !== finished) {\n      setFinished(isFinished);\n    }\n  }\n\n  const startCounter = () => {\n    timerId = window.setInterval(computeTime, 1000);\n  };\n\n  const stopCounter = () => clearInterval(timerId);\n\n  useEffect(() => {\n    startCounter();\n\n    return stopCounter;\n  }, []);\n\n  const remainingTime = format(time, 'dd,hh,mm,ss').split(',');\n\n  return (\n    <div className={cnCountdown()}>\n      {finished && <div className={cnCountdown('FinalTitle')}>{`${lang.finally} пятница!`}</div>}\n      <div className={cnCountdown('Title')}>{`Пятница ${lang.in}:`}</div>\n      <div className={cnCountdown('Divider')} />\n      <div className={cnCountdown('RemainingTime')}>\n        <Counter unit={commonLang.days} value={remainingTime[0]} />\n        <Counter unit={commonLang.hours} value={remainingTime[1]} />\n        <Counter unit={commonLang.minutes} value={remainingTime[2]} />\n        <Counter unit={commonLang.seconds} value={remainingTime[3]} />\n      </div>\n    </div>\n  );\n\n});","import { IState } from \"../typings\";\nimport produce from 'immer';\n\nimport { IColorStore, ColorStoreActions } from './typings';\nimport { ColorActions } from \"./actions\";\n\nexport const ColorStore: IColorStore = {\n  primary: 250\n}\n\nexport const colorReducer = (state: IState, action: ColorActions) => produce(state, draft => {\n  switch (action.type) {\n    case ColorStoreActions.change:\n      draft.colorStore.primary = action.payload;\n      return draft;\n    default:\n      return draft;\n  }\n});","export interface ISettingsStore {\n    /** Display months */\n    withMonths: boolean;\n    /** Display years */\n    withYears: boolean;\n}\n\nexport enum SettingsStoreActionTypes {\n    toggleMonths = 'settings:toggleMonths',\n    toggleYears = 'settings: toggleYears'\n}","import { ISettingsStore, SettingsStoreActionTypes } from \"./typings\";\nimport { IState, Action } from \"../typings\";\nimport produce from \"immer\";\n\nexport const SettingsStore: ISettingsStore = {\n    withMonths: false,\n    withYears: false,\n}\n\nexport const settingsReducer = (state: IState, action: Action) => produce(state, draft => {\n    switch (action.type) {\n        case SettingsStoreActionTypes.toggleMonths:\n            draft.settingsStore.withMonths = !draft.settingsStore.withMonths\n            return draft;\n        case SettingsStoreActionTypes.toggleYears:\n            draft.settingsStore.withMonths = !draft.settingsStore.withYears || draft.settingsStore.withMonths;\n            draft.settingsStore.withYears = !draft.settingsStore.withYears;\n            return draft;\n        default:\n            return draft;\n    }\n});","import { Action } from \"../../typings\";\nimport { DateTime } from \"luxon\";\n\nexport enum CounterStoreActionTypes {\n    add = 'counters:add',\n    remove = 'counters:remove'\n}\n\nexport interface CounterAddAction extends Action {\n    payload: {\n        text: string;\n        date: DateTime;\n    }\n};\n\nexport interface CounterRemoveAction extends Action {\n    payload: number;\n}","import { DateTime } from \"luxon\";\nimport { IState, Action } from \"../typings\";\nimport produce from \"immer\";\nimport { CounterStoreActionTypes, CounterAddAction, CounterRemoveAction } from \"./CounterStore.typings\";\n\ninterface ICounter {\n    date: DateTime;\n    text: string;\n    id: number;\n}\n\nexport interface ICounterStore {\n    counters: ICounter[];\n}\n\nexport const CounterStore: ICounterStore = {\n    counters: []\n}\n\nexport const counterReducer = (state: IState, action: Action) => produce(state, draft => {\n    switch (action.type) {\n        case CounterStoreActionTypes.add:\n            draft.counterStore.counters.push({\n                id: Math.random(),\n                text: (action as CounterAddAction).payload.text,\n                date: (action as CounterAddAction).payload.date,\n            });\n            return draft;\n        case CounterStoreActionTypes.remove:\n            draft.counterStore.counters = draft.counterStore.counters\n                .filter(counter => counter.id !== (action as CounterRemoveAction).payload);\n            return draft;\n        default:\n            return state;\n    }\n});","import { IState } from './typings';\nimport { createReducer } from \"./utils\";\nimport { ColorStore, colorReducer } from \"./ColorStore/ColorStore\";\nimport { settingsReducer, SettingsStore } from \"./SettingsStore/SettingsStore\";\nimport { CounterStore, counterReducer } from \"./CounterStore/CounterStore\";\n\nexport const initialState: IState = {\n  colorStore: ColorStore,\n  settingsStore: SettingsStore,\n  counterStore: CounterStore,\n}\n\nexport const rootReducer = createReducer(\n  colorReducer,\n  settingsReducer,\n  counterReducer,\n);","import { Action, IState } from \"../typings\";\n\n\nexport const createReducer = (...reducers: ((state: IState, action: Action) => IState)[]) => {\n    return (state: IState, action: Action) => {\n        let result = state;\n\n        for (let reducer of reducers) {\n            result = reducer(result, action);\n        }\n\n        return result;\n    }\n};","import React from 'react';\nimport { IState } from '../store/typings';\nimport { initialState } from '../store';\nimport { noop } from '../utils';\n\ninterface IStoreContext {\n    store: IState;\n    dispatch: (args: any) => void;\n}\n\nexport const StoreContext = React.createContext<IStoreContext>({ store: initialState, dispatch: noop });","import React, { useContext } from 'react';\nimport { StoreContext } from '../../context/StoreContext';\n\nexport const Theme = React.memo(() => {\n    const { store } = useContext(StoreContext);\n    const cssVars = `\n        .App{\n            --primaryHue: ${store.colorStore.primary}\n        }`;\n\n    return (\n        <style>\n            {cssVars}\n        </style>\n    );\n});","import React from 'react';\n\nimport { cnSidebar } from '../Sidebar';\n\nimport './Tab.scss';\n\ninterface ISidebarTabProps {\n    text: string;\n    active?: boolean;\n    onClick(): void;\n}\n\nexport const Tab: React.FC<ISidebarTabProps> = React.memo(props => {\n    return (\n        <div className={cnSidebar('Tab', { active: props.active })} onClick={props.onClick}>\n            <span className={cnSidebar('TabText')}>{props.text}</span>\n        </div>\n    );\n});\n","import React from 'react';\nimport { cn } from 'recn';\n\nimport { IClassNameProps } from '../../typings';\n\nimport './Icon.scss';\n\nexport interface IIconProps extends IClassNameProps {\n    name: string;\n    iconStyle?: 'ios' | 'md';\n    onIconClick?: (e: React.MouseEvent) => void;\n    style?: React.CSSProperties;\n}\n\nconst cnIcon = cn('Icon');\n\nexport const Icon: React.FC<IIconProps> = React.memo(props => {\n    const { onIconClick, style, iconStyle = 'ios', name, className } = props;\n\n    return (\n        <i\n            onClick={onIconClick}\n            style={style}\n            className={cnIcon(null, [`ion-${iconStyle}-${name}`, className])} />\n    );\n});","import React, { useState, useReducer } from 'react';\nimport { cn } from 'recn';\nimport { getCurrentDay, noop } from '../../utils';\n\nimport './DateInput.scss';\nimport { DateTime } from 'luxon';\nimport { IClassNameProps } from '../../typings';\n\nconst cnDateInput = cn('DateInput');\n\ninterface IDateInputProps extends IClassNameProps {\n    caption: string;\n    date?: DateTime;\n    forwardRef: React.RefObject<HTMLInputElement>;\n    onChange?(): void;\n}\n\nexport const DateInput: React.FC<IDateInputProps> = React.memo(props => {\n    const { forwardRef, caption, date, onChange = noop } = props;\n\n    return (\n        <div className={cnDateInput(null, [props.className])}>\n            <label className={cnDateInput('Label')}>{caption}</label>\n            <input type='date' ref={forwardRef} defaultValue={date && date.toSQLDate()} className={cnDateInput('Input')} onChange={onChange} />\n        </div>\n    )\n});","import React from 'react';\nimport { cn } from 'recn';\n\nimport './TextInput.scss';\nimport { IClassNameProps } from '../../typings';\n\ninterface ITextInputProps extends IClassNameProps {\n    defaultValue?: string;\n    forwardRef: React.RefObject<HTMLInputElement>;\n    caption: string;\n    placeholder?: string;\n}\n\nconst cnTextInput = cn('TextInput');\n\nexport const TextInput: React.FC<ITextInputProps> = React.memo(props => {\n    const { defaultValue, forwardRef, caption, placeholder } = props;\n\n    return (\n        <div className={cnTextInput(null, [props.className])}>\n            <label className={cnTextInput('Label')}>{caption}</label>\n            <input className={cnTextInput('Input')} defaultValue={defaultValue} ref={forwardRef} placeholder={placeholder} />\n        </div>\n    );\n});","import React from 'react';\nimport { cn } from 'recn';\n\nimport { IClassNameProps } from '../../typings';\n\nimport './Button.scss';\nimport { IIconProps, Icon } from '../Icon/Icon';\n\n\nexport interface IButtonProps extends IClassNameProps {\n  onButtonClick?: (e: React.MouseEvent) => void;\n  hint?: string;\n  text?: string;\n  icon?: IIconProps;\n}\n\nexport const cnButton = cn('Button');\n\nexport const Button: React.FC<IButtonProps> = React.memo(props => {\n  const { className, onButtonClick, text, icon } = props;\n  return (\n    <button className={cnButton(null, [className])} onClick={onButtonClick}>\n      {text}\n      {icon && <Icon {...icon} />}\n    </button>\n  );\n}); ","import React, { useContext } from 'react';\nimport { DateInput } from '../DateInput/DateInput';\nimport { TextInput } from '../TextInput/TextInput';\nimport { Button } from '../Button';\nimport { cn } from 'recn';\nimport { StoreContext } from '../../context/StoreContext';\nimport { getCurrentDay } from '../../utils';\nimport { DateTime } from 'luxon';\nimport { CounterStoreActionTypes, CounterAddAction } from '../../store/CounterStore/CounterStore.typings';\nimport './DateForm.scss';\n\nconst cnDateForm = cn('DateForm');\n\nexport const DateForm: React.FC = React.memo(() => {\n    const { dispatch } = useContext(StoreContext);\n\n    const titleRef = React.createRef<HTMLInputElement>();\n    const dateRef = React.createRef<HTMLInputElement>();\n\n    const reset = () => {\n        if (!dateRef.current || !titleRef.current) {\n            return;\n        }\n\n        titleRef.current.value = '';\n        dateRef.current.value = getCurrentDay().toSQL();\n    }\n\n    const handleError = () => {\n        reset();\n    }\n\n    const onButtonClick = () => {\n        if (!dateRef.current || !titleRef.current) {\n            return;\n        }\n\n        const targetDate = DateTime.fromSQL(dateRef.current.value);\n        const currentDate = getCurrentDay();\n        if (targetDate < currentDate || titleRef.current.value === '') {\n            handleError();\n            return;\n        }\n\n        dispatch({\n            type: CounterStoreActionTypes.add,\n            payload: { text: titleRef.current.value, date: targetDate }\n        } as CounterAddAction);\n        reset();\n    }\n\n    return (\n        <div className={cnDateForm()}>\n            <TextInput className={cnDateForm('Input')} forwardRef={titleRef} caption={'Введите название события'} placeholder='День рождения Саши' />\n            <DateInput className={cnDateForm('Input')} forwardRef={dateRef} caption={'Введите дату'} date={getCurrentDay()} />\n            <Button text=\"Добавить\" onButtonClick={onButtonClick} />\n        </div>\n    )\n})","import React, { useContext } from 'react';\nimport { cn } from 'recn';\nimport { StoreContext } from '../../context/StoreContext';\n\nimport './CounterList.scss';\n\nconst cnCounterList = cn('CounterList');\n\nexport const CounterList = React.memo(() => {\n    const { store } = useContext(StoreContext);\n    const counters = [...store.counterStore.counters];\n\n    return (\n        <div className={cnCounterList()}>\n            {counters.sort((a, b) => a.date.toMillis() - b.date.toMillis()).map(counter => (\n                <div className={cnCounterList('Item')} key={counter.id}>\n                    <div className={cnCounterList('Title')}>{counter.text}</div>\n                    <div className={cnCounterList('Date')}>{counter.date.toSQLDate()}</div>\n                </div>\n            ))}\n        </div>\n    );\n});","import React, { useState } from 'react';\nimport { cn } from 'recn';\n\nimport './Sidebar.scss';\nimport { DateInput } from '../DateInput/DateInput';\nimport { Tab } from './Tab/Tab';\nimport { Icon } from '../Icon/Icon';\nimport { Button } from '../Button';\nimport { DateForm } from '../DateForm/DateForm';\nimport { CounterList } from '../CounterList/CounterList';\n\nexport const cnSidebar = cn('Sidebar');\n\ninterface ISidebarProps {\n  opened?: boolean;\n}\n\nconst tabs = [{\n  text: 'Таймеры',\n  index: 0\n}, {\n  text: 'Настройки',\n  index: 1\n}]\n\nexport const Sidebar: React.FC<ISidebarProps> = React.memo((props) => {\n  const [activeTab, setActiveTab] = useState(0);\n  const [sidebarOpened, setSidebarOpened] = useState(false);\n\n  const onTabClick = (tabIndex: number) => () => setActiveTab(tabIndex);\n\n  const onSettingsClick = () => {\n    setSidebarOpened(!sidebarOpened);\n  }\n\n  return (\n    <div className={cnSidebar({ opened: sidebarOpened })}>\n      <Icon name='settings' className={cnSidebar('Menu')} onIconClick={onSettingsClick} />\n      <DateForm />\n      <CounterList />\n      <div className={cnSidebar('TabPanel')}>\n        {tabs.map(tab => (\n          <Tab\n            key={tab.index}\n            text={tab.text}\n            active={tab.index === activeTab}\n            onClick={onTabClick(tab.index)} />\n        ))}\n      </div>\n    </div>\n  );\n});","import React, { useReducer, useState } from 'react';\nimport { cn } from 'recn';\n\nimport { Countdown } from '../Countdown/Countdown';\nimport { rootReducer, initialState } from '../../store';\nimport { StoreContext } from '../../context/StoreContext';\n\nimport './App.scss';\nimport { Theme } from '../Theme/Theme';\nimport { Sidebar } from '../Sidebar/Sidebar';\nimport { Locales } from '../../utils/i18n';\nimport { LanguageContext } from '../../context/LanguageContext';\n\nconst cnApp = cn('App');\n\nexport const App = () => {\n  const [store, dispatch] = useReducer(rootReducer, initialState);\n  const [locale, setLocale] = useState(Locales.ru);\n\n  return (\n    <LanguageContext.Provider value={{ locale, setLocale }}>\n      <StoreContext.Provider value={{ store, dispatch }}>\n        <div className={cnApp()}>\n          <Theme />\n          <Countdown />\n          {false && <Sidebar />}\n        </div>\n      </StoreContext.Provider>\n    </LanguageContext.Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App/App';\n\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}